<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.academy.latteis.board.repository.BoardMapper">

    <!-- sql과 java의 이름 관례 차이에서 오는 매핑을 맞춰주는 것 -->
    <resultMap id="boardMap" type="com.academy.latteis.board.domain.Board">
        <result property="boardNo" column="board_no"/>
        <result property="topicNo" column="topic_no"/>
        <result property="userNickname" column="user_nickname"/>
    </resultMap>

    <!-- 좋아요 관련 Board dto -->
    <resultMap id="boardGoodMap" type="com.academy.latteis.board.dto.BoardGoodDTO">
        <result property="boardNo" column="board_no"/>
        <result property="topicNo" column="topic_no"/>
        <result property="userNickname" column="user_nickname"/>
        <result property="userNo" column="user_No"/>
    </resultMap>

    <!-- BoardConvertDTO -->
    <resultMap id="boardConvertMap" type="com.academy.latteis.board.dto.BoardConvertDTO">
        <result property="boardNo" column="board_no"/>
        <result property="topicNo" column="topic_no"/>
        <result property="userNickname" column="user_nickname"/>
    </resultMap>

    <!-- EditBoardDTO -->
    <resultMap id="editBoardMap" type="com.academy.latteis.board.dto.EditBoardDTO">
        <result property="boardNo" column="board_no"/>
        <result property="editFileName" column="file_name"/>
    </resultMap>

    <!-- 중복 쿼리문 재사용하기 -->
    <sql id="searchInclude">
        <if test="type == 'title'">AND title LIKE CONCAT('%', #{keyword}, '%')</if>
        <if test="type == 'writer'">AND writer LIKE CONCAT('%', #{keyword}, '%')</if>
        <if test="type == 'content'">AND content LIKE CONCAT('%', #{keyword}, '%')</if>
        <if test="type == 'tc'">
            AND title LIKE CONCAT('%', #{keyword}, '%')
            OR content LIKE CONCAT('%', #{keyword}, '%')
        </if>
    </sql>


    <!-- 자유게시판 게시글 작성 -->
    <insert id="writeFree">
        insert into board
            (writer, title, content, user_nickname)
        values (#{writer}, #{title}, #{content}, #{userNickname})
    </insert>
    <!-- 연령대별 게시판 게시글 작성 -->
    <insert id="writeGeneration">
        insert into board
            (writer, title, content, user_nickname, generation)
        values (#{writer}, #{title}, #{content}, #{userNickname}, #{generation})
    </insert>
    <insert id="writeKeyword">
        insert into board
            (writer, title, content, user_nickname, topic_no)
        values (#{writer}, #{title}, #{content}, #{userNickname}, #{topicNo})
    </insert>

    <!-- 자유게시판 목록 가져오기 -->
    <select id="findAllFree" resultMap="boardConvertMap">
        SELECT *
        FROM board
        WHERE generation IS NULL and topic_no is null

        <include refid="searchInclude"/>

        ORDER BY board_no DESC
        LIMIT #{start}, #{amount}
    </select>

    <!-- 연령대별 게시판 목록 가져오기 -->
    <select id="findAllGeneration" resultMap="boardConvertMap">
        SELECT *
        FROM board

        <if test="generation == '2000' || generation == '1990' || generation == '1980'|| generation == '1970'">
            WHERE generation = #{generation}
        </if>
        <if test="generation == 9999">WHERE generation IS NOT NULL</if>

        <if test="search.type == 'title'">AND title LIKE CONCAT('%', #{search.keyword}, '%')</if>
        <if test="search.type == 'writer'">AND writer LIKE CONCAT('%', #{search.keyword}, '%')</if>
        <if test="search.type == 'content'">AND content LIKE CONCAT('%', #{search.keyword}, '%')</if>
        <if test="search.type == 'tc'">
            AND title LIKE CONCAT('%', #{search.keyword}, '%')
            OR content LIKE CONCAT('%', #{search.keyword}, '%')
        </if>
        ORDER BY board_no DESC
        LIMIT #{search.start}, #{search.amount}
    </select>

    <!-- 키워드 게시판 목록 가져오기 -->
    <select id="findAllKeyword" resultMap="boardConvertMap">
        SELECT *
        FROM board WHERE topic_no = #{topicNo}
        <if test="search.type == 'title'">AND title LIKE CONCAT('%', #{search.keyword}, '%')</if>
        <if test="search.type == 'writer'">AND writer LIKE CONCAT('%', #{search.keyword}, '%')</if>
        <if test="search.type == 'content'">AND content LIKE CONCAT('%', #{search.keyword}, '%')</if>
        <if test="search.type == 'tc'">
            AND title LIKE CONCAT('%', #{search.keyword}, '%')
            OR content LIKE CONCAT('%', #{search.keyword}, '%')
        </if>
        ORDER BY board_no DESC
        LIMIT #{search.start}, #{search.amount}
    </select>

    <!-- 게시글 상세보기 -->
    <select id="findOne" resultMap="boardGoodMap">
        select *
        from board b
                 left outer join board_good bg
                                 on (b.board_no = bg.board_no)
        where b.board_no = #{boardNo}
    </select>

    <!-- 자유게시판 전체 수 가져오기 -->
    <select id="getTotalCountFree" resultType="int">
        SELECT COUNT(*)
        FROM board
        WHERE generation IS NULL

        <include refid="searchInclude"/>

    </select>
    <!-- 연령대별 게시판 전체 수 가져오기 -->
    <select id="getTotalCountGeneration" resultType="int">
        SELECT COUNT(*)
        FROM board
        WHERE generation IS NOT NULL

        <include refid="searchInclude"/>

    </select>

    <!-- 게시글 삭제 -->
    <delete id="remove">
        delete
        from board
        where board_no = #{boardNo}
    </delete>

    <!-- 게시글 수정 -->
    <update id="edit">
        update board
        set writer=#{writer},
            title=#{title},
            content=#{content}
        where board_no = #{boardNo}
    </update>

    <!-- 조회수 -->
    <update id="upHit">
        UPDATE board
        SET hit = hit + 1
        WHERE board_no = #{boardNo}
    </update>

    <!-- 게시글 번호에 맞는 계정 가져오기 -->
    <select id="findUserByBoardNo" resultType="com.academy.latteis.board.dto.ValidateUserDTO">
        SELECT user_email AS userEmail, auth
        FROM user
        WHERE user_nickname = (SELECT user_nickname
                               FROM board
                               WHERE board_no = #{boardNo})
    </select>

    <!-- 첨부파일 추가 -->
    <insert id="addFile">
        INSERT INTO file_upload (file_name, board_no)
        VALUES (#{fileName}, last_insert_id())
    </insert>

    <!-- 게시글 수정 시, 파일 추가 -->
    <insert id="addFileByEdit">
        INSERT INTO file_upload (file_name, board_no)
        VALUES (#{fileName}, #{boardNo})
    </insert>

    <!-- 해당 글 첨부파일 모두 삭제 -->
    <delete id="deleteAllFile">
        DELETE FROM file_upload WHERE board_no = #{boardNo}
    </delete>

    <!-- 수정 글 첨부파일 삭제 -->
    <delete id="editFileDelete">
        DELETE FROM file_upload WHERE board_no = #{boardNo} AND file_name = #{editFileName}
    </delete>

    <!-- 첨부파일 경로명 조회 -->
    <select id="findFileNames" resultType="string">
        SELECT file_name
        FROM file_upload
        WHERE board_no = #{boardNo}
    </select>
</mapper>